{"version":3,"file":"static/js/16.2a9751a2.chunk.js","mappings":"uPAMMA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CL,KAAMI,EAAAA,KAEHE,KAAK,+DACLC,QAAO,GACPC,SAAS,2BAEZP,MAAOG,EAAAA,KAEJH,MAAM,yBACNO,SAAS,4BAEZN,SAAUE,EAAAA,KAEPE,KAAK,+DACLC,QAAO,GACPE,IAAI,EAAG,sDACPD,SAAS,iCAGDE,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAMd,OACE,SAAC,KAAD,CACEf,cAAeA,EACfI,iBAAkBA,EAClBY,SARiB,SAAAC,GACnBL,GAASM,EAAAA,EAAAA,IAASD,GACnB,EAGC,UAKE,6BACE,yCAEE,kBAAOE,KAAK,OAAOlB,KAAK,aAG1B,sCAEE,kBAAOkB,KAAK,QAAQlB,KAAK,cAG3B,yCAEE,kBAAOkB,KAAK,WAAWlB,KAAK,gBAG7Ba,IAAS,yBAAMA,KAEhB,mBAAQK,KAAK,SAAb,0BAIP,ECjEc,SAASC,IACtB,OACE,6BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACV,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register/Register.js"],"sourcesContent":["import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operation';\nimport { useAuth } from 'hooks';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .trim('The contact name cannot include leading and trailing spaces')\n    .strict(true)\n    .required('Please fill in the name'),\n\n  email: yup\n    .string()\n    .email('Email must be a valid')\n    .required('Please fill in the email'),\n\n  password: yup\n    .string()\n    .trim('The contact name cannot include leading and trailing spaces')\n    .strict(true)\n    .min(7, 'Password is too short - should be 7 chars minimum.')\n    .required('Please fill in the password'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const error = useAuth();\n\n  const handleSubmit = values => {\n    dispatch(register(values));\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <form>\n        <label>\n          Username\n          <input type='text' name='name'/>\n        </label>\n\n        <label>\n          Email\n          <input type='email' name='email'/>\n        </label>\n\n        <label>\n          Password\n          <input type='password' name='password'/>\n        </label>\n\n        {error && <div>{error}</div>}\n\n        <button type='submit'>Register</button>\n      </form>\n    </Formik>\n  )\n}\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <main>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </main>\n  );\n}\n"],"names":["initialValues","name","email","password","validationSchema","yup","shape","trim","strict","required","min","RegisterForm","dispatch","useDispatch","error","useAuth","onSubmit","values","register","type","Register","Helmet"],"sourceRoot":""}