{"version":3,"file":"static/js/617.92febeb1.chunk.js","mappings":"0LAGaA,E,QAAYC,GAAAA,EAAH,gM,UCEP,SAASC,EAAT,GAA4B,IAARC,EAAO,EAAPA,KACjC,OACE,SAAC,KAAD,CACEA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAACL,EAAD,UAAYK,GAAhB,GAGpB,C,sJCFKC,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CJ,MAAOG,EAAAA,KAEJH,MAAM,yBACNK,SAAS,4BAEZJ,SAAUE,EAAAA,KAEPG,KAAK,+DACLC,QAAO,GACPC,IAAI,EAAG,sDACPH,SAAS,iCAGDI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,KAAVD,MAMR,OACE,SAAC,KAAD,CACEb,cAAeA,EACfG,iBAAkBA,EAClBY,SARiB,SAAAC,GACnBL,GAASM,EAAAA,EAAAA,IAAMD,GAChB,EAGC,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,oBAEE,SAAC,KAAD,CAAOE,KAAK,QAAQrB,KAAK,cAE3B,SAACD,EAAA,EAAD,CAAWC,KAAK,WAEhB,UAAC,KAAD,uBAEE,SAAC,KAAD,CAAOqB,KAAK,WAAWrB,KAAK,iBAE9B,SAACD,EAAA,EAAD,CAAWC,KAAK,aAEfgB,IAAS,yBAAMA,KAEhB,SAAC,KAAD,CAAcK,KAAK,SAAnB,0BAIP,E,UC3Dc,SAASC,IACtB,OACE,6BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAACV,EAAD,MAGL,C,iLCPYW,GAAa1B,EAAAA,EAAAA,IAAO2B,EAAAA,GAAP3B,CAAH,4DAIV4B,GAAe5B,EAAAA,EAAAA,IAAO6B,EAAAA,EAAP7B,CAAH,gEAER,SAAA8B,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGLC,GAAQjC,EAAAA,EAAAA,IAAOkC,EAAAA,GAAPlC,CAAH,oMAEH,SAAA8B,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAtB,IACH,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGQ,SAAAF,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,OAAnB,IACJ,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,MAAMC,MAAlB,IAIPC,EAAQzC,EAAAA,GAAAA,MAAH,0HAGD,SAAA8B,GAAC,OAAIA,EAAEC,MAAMW,YAAYC,QAAxB,IACF,SAAAb,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACN,SAAAF,GAAC,OAAIA,EAAEC,MAAMM,OAAOO,IAAnB,G","sources":["components/ErrorForm/ErrorForm.styled.jsx","components/ErrorForm/ErrorForm.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.js","shared/FormikStyle/FormikStyle.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\n\nexport const ErrorText = styled.p`\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 2px;\n  border-radius: 1px;\n  width: 200px;\n  color: white;\n  background-color: red;\n`\n","import { ErrorMessage } from \"formik\";\nimport PropTypes from 'prop-types';\nimport { ErrorText } from \"./ErrorForm.styled\";\n\n\nexport default function ErrorForm({name}) {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  )\n}\n\nErrorForm.propTypes = {\n  name: PropTypes.string.isRequired,\n}\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operation';\n\nimport { useAuth } from 'hooks';\nimport { FormStyled, Input, Label, StyledButton } from 'shared/FormikStyle/FormikStyle';\nimport ErrorForm from 'components/ErrorForm/ErrorForm';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Email must be a valid')\n    .required('Please fill in the email'),\n\n  password: yup\n    .string()\n    .trim('The contact name cannot include leading and trailing spaces')\n    .strict(true)\n    .min(7, 'Password is too short - should be 7 chars minimum.')\n    .required('Please fill in the password'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const { error } = useAuth();\n\n  const handleSubmit = values => {\n    dispatch(logIn(values));\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormStyled>\n        <Label>\n          Email\n          <Input type='email' name='email'/>\n        </Label>\n        <ErrorForm name='email'/>\n\n        <Label>\n          Password\n          <Input type='password' name='password'/>\n        </Label>\n        <ErrorForm name='password'/>\n\n        {error && <div>{error}</div>}\n\n        <StyledButton type='submit'>Register</StyledButton>\n      </FormStyled>\n    </Formik>\n  )\n}\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function Login() {\n  return (\n    <main>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </main>\n  );\n}\n","import { Field, Form } from \"formik\";\nimport { Button } from \"shared/Button/Button.styles\";\nimport styled from \"styled-components\";\n\n\nexport const FormStyled = styled(Form)`\n  width: 320px;\n  margin: 0 auto;\n`\nexport const StyledButton = styled(Button)`\n   width: 100%;\n   margin-top: ${p => p.theme.space[4]}px;\n`\n\nexport const Input = styled(Field)`\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.s};\n  padding: ${p => p.theme.space[2]}px 4px;\n  margin-top: 6px;\n  outline: none;\n  border: 1px solid ${p => p.theme.colors.primary};\n  border-radius: ${p => p.theme.radii.normal};\n  box-sizing: border-box;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  text-align: left;\n  font-weight: ${p => p.theme.fontWeights.semibold};\n  margin-top: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.text};\n`\n"],"names":["ErrorText","styled","ErrorForm","name","render","message","initialValues","email","password","validationSchema","yup","shape","required","trim","strict","min","LoginForm","dispatch","useDispatch","error","useAuth","onSubmit","values","logIn","type","Login","Helmet","FormStyled","Form","StyledButton","Button","p","theme","space","Input","Field","fontSizes","s","colors","primary","radii","normal","Label","fontWeights","semibold","text"],"sourceRoot":""}